---
import { CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import ContentLayout from "@/layouts/content.astro";
import { getArticleSchema } from "@/lib/structuredData";
import { blogWebsite } from "@/lib/structuredData";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: {
      ...post,
      data: {
        ...post.data,
        date: post.data.date.toLocaleDateString("en-US", {
          year: "numeric",
          month: "long",
          day: "numeric"
        })
      }
    },
  }));
}

const post = Astro.props;
const { Content } = await post.render();
const articleStructuredData = getArticleSchema(post);

const breadcrumbsStructuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Blog",
      item: `${import.meta.env.SITE}/blog/`,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: post.data.title,
      item: `${import.meta.env.SITE}/blog/${post.slug}/`,
    },
  ],
};

const jsonLd = {
  "@context": "https://schema.org",
  "@graph": [articleStructuredData, breadcrumbsStructuredData, blogWebsite],
};
---

<ContentLayout
  title={`${post.data.title} | Timothy Pidashev`}
  description={post.data.description}
>
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  <div class="relative max-w-8xl mx-auto">
    <article class="prose prose-lg mx-auto max-w-4xl">
      {post.data.image && (
        <div class="-mx-4 sm:mx-0 mb-8">
          <Image
            src={post.data.image}
            alt={post.data.title}
            class="w-full h-auto rounded-lg object-cover"
            width={1200}
            height={630}
            quality={100}
          />
        </div>
      )}
      <h1 class="text-3xl pt-4">{post.data.title}</h1>
      <p class="lg:text-2xl sm:text-lg">{post.data.description}</p>
      <div class="mt-4 md:mt-6">
        <div class="flex flex-wrap items-center gap-2 md:gap-3 text-sm md:text-base text-foreground/80">
          <span class="text-orange">{post.data.author}</span>
          <span class="text-foreground/50">â€¢</span>
          <time dateTime={post.data.date} class="text-blue">
            {post.data.date}
          </time>
        </div>
      </div>
      <div class="flex flex-wrap gap-2 mt-4 md:mt-6">
        {post.data.tags.map((tag) => (
          <span 
            class="text-xs md:text-base text-aqua hover:text-aqua-bright transition-colors duration-200"
            onclick={`window.location.href='/blog/tag/${tag}'`}
          >
            #{tag}
          </span>
        ))}
      </div>
      <div class="prose prose-invert max-w-none">
        <Content />
      </div>
    </article>
  </div>
</ContentLayout>
